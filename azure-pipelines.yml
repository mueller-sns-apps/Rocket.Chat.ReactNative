trigger:
- main

pool:
  vmImage: 'macOS-latest'
jobs:
- job:
  displayName: "Build Android App"
  steps:
  - checkout: self
  - task: DownloadSecureFile@1
    name: keyStore
    displayName: 'Download keyStore'
    inputs:
      secureFile: 'my-upload-key.keystore'
  - script: |
      cp $(keyStore.secureFilePath) $(Build.SourcesDirectory)/android/app/my-upload-key.keystore
      ls -la ./android/app/
      echo "Build number is: $BUILD_BUILDNUMBER"
      sed -i -e 's/VERSIONCODE=.*/VERSIONCODE='$BUILD_BUILDNUMBER'/g' $(Build.SourcesDirectory)/android/gradle.properties
      cat $(Build.SourcesDirectory)/android/gradle.properties
  - script: yarn install
  - task: Gradle@2
    displayName: "Build apk"
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'android/gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: '-p android clean :app:assembleExperimentalPlayRelease'
  - script: |
      find . -type f -name "app-experimental-play-release.apk" | xargs -I ยง mv ยง $(Build.SourcesDirectory)/mueller-chat.apk
  - task: CopyFiles@2
    displayName: "Copy apk to build artifacts folder."
    inputs:
      SourceFolder: $(Build.SourcesDirectory)
      contents: '**/*.apk'
      targetFolder: '$(Build.artifactStagingDirectory)'
      overWrite: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: android-artifacts
#- job:
#  displayName: "Build iOS App"
#  steps:
#  - checkout: self
#  - script: yarn install
#  - script: |
#      cd ios
#      /usr/local/bin/pod install
##  - task: InstallAppleCertificate@2
##    inputs:
##      certSecureFile: 'chrisid_iOSDev_Nov2018.p12'
##      certPwd: $(P12Password)
##  - task: InstallAppleProvisioningProfile@1
##    inputs:
##      provProfileSecureFile: '6ffac825-ed27-47d0-8134-95fcf37a666c.mobileprovision'
#  - task: Xcode@5
#    inputs:
#      actions: 'build'
#      scheme: 'RocketChat'
#      sdk: 'iphoneos'
#      configuration: 'Release'
#      xcWorkspacePath: 'ios/RocketChatRN.xcworkspace'
#      xcodeVersion: 'default' # Options: 8, 9, 10, default, specifyPath
#      signingOption: 'nosign' # Options: nosign, default, manual, auto - signing requires Push notifications certificate from the apple app store
#      useXcpretty: 'false' # Makes it easier to diagnose build failures
#  - task: CopyFiles@2
#    inputs:
#      contents: '**/*.ipa'
#      targetFolder: '$(Build.ArtifactStagingDirectory)'
#  - task: PublishBuildArtifacts@1
#    inputs:
#      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#      artifactName: ios-artifacts
#


# https://dev.azure.com/thorstenhersam0882/M%C3%BCller%20Chat%20App/_build?view=runs
# Get Build Time in minutes used this month
# Array.from(document.querySelectorAll('span.bolt-time-item')).reduce((a,b,c) => {a.push(b.innerText); return a}, []).filter(a => a.includes(" ")).join(" ").split(" ").reduce((a,b) => b.includes("m") ? Number(b.replace("m",""))*60 + a : Number(b.replace("s", "")) + a, 0) / 60
